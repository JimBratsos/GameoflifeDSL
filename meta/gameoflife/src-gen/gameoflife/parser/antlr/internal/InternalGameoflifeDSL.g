/*
 * generated by Xtext 2.25.0
 */
grammar InternalGameoflifeDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package gameoflife.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package gameoflife.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import gameoflife.services.GameoflifeDSLGrammarAccess;

}

@parser::members {

 	private GameoflifeDSLGrammarAccess grammarAccess;

    public InternalGameoflifeDSLParser(TokenStream input, GameoflifeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GameStart";
   	}

   	@Override
   	protected GameoflifeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGameStart
entryRuleGameStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameStartRule()); }
	iv_ruleGameStart=ruleGameStart
	{ $current=$iv_ruleGameStart.current; }
	EOF;

// Rule GameStart
ruleGameStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GameStart'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameStartAccess().getGameStartKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGameStartAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameStartAccess().getInitialGridInitialGridParserRuleCall_2_0());
				}
				lv_initialGrid_2_0=ruleInitialGrid
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameStartRule());
					}
					set(
						$current,
						"initialGrid",
						lv_initialGrid_2_0,
						"gameoflife.GameoflifeDSL.InitialGrid");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGameStartAccess().getEvolutionRulesEvolutionRulesParserRuleCall_3_0());
				}
				lv_evolutionRules_3_0=ruleEvolutionRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameStartRule());
					}
					add(
						$current,
						"evolutionRules",
						lv_evolutionRules_3_0,
						"gameoflife.GameoflifeDSL.EvolutionRules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getGameStartAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInitialGrid
entryRuleInitialGrid returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialGridRule()); }
	iv_ruleInitialGrid=ruleInitialGrid
	{ $current=$iv_ruleInitialGrid.current; }
	EOF;

// Rule InitialGrid
ruleInitialGrid returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitialGridAccess().getInitialGridAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Draw'
			{
				newLeafNode(otherlv_1, grammarAccess.getInitialGridAccess().getDrawKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitialGridAccess().getCellsCellStatusParserRuleCall_1_1_0());
					}
					lv_cells_2_0=ruleCellStatus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitialGridRule());
						}
						add(
							$current,
							"cells",
							lv_cells_2_0,
							"gameoflife.GameoflifeDSL.CellStatus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_3='Draw'
			{
				newLeafNode(otherlv_3, grammarAccess.getInitialGridAccess().getDrawKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitialGridAccess().getLinesLineStatusParserRuleCall_2_1_0());
					}
					lv_lines_4_0=ruleLineStatus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitialGridRule());
						}
						add(
							$current,
							"lines",
							lv_lines_4_0,
							"gameoflife.GameoflifeDSL.LineStatus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLineStatus
entryRuleLineStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineStatusRule()); }
	iv_ruleLineStatus=ruleLineStatus
	{ $current=$iv_ruleLineStatus.current; }
	EOF;

// Rule LineStatus
ruleLineStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLineStatusAccess().getCoordinatesLineCoordsParserRuleCall_0());
			}
			lv_coordinates_0_0=ruleLineCoords
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLineStatusRule());
				}
				set(
					$current,
					"coordinates",
					lv_coordinates_0_0,
					"gameoflife.GameoflifeDSL.LineCoords");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLineCoords
entryRuleLineCoords returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineCoordsRule()); }
	iv_ruleLineCoords=ruleLineCoords
	{ $current=$iv_ruleLineCoords.current; }
	EOF;

// Rule LineCoords
ruleLineCoords returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Many'
		{
			newLeafNode(otherlv_0, grammarAccess.getLineCoordsAccess().getManyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLineCoordsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_xbeg_2_0=RULE_INT
				{
					newLeafNode(lv_xbeg_2_0, grammarAccess.getLineCoordsAccess().getXbegINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineCoordsRule());
					}
					setWithLastConsumed(
						$current,
						"xbeg",
						lv_xbeg_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getLineCoordsAccess().getToKeyword_3());
		}
		(
			(
				lv_xend_4_0=RULE_INT
				{
					newLeafNode(lv_xend_4_0, grammarAccess.getLineCoordsAccess().getXendINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineCoordsRule());
					}
					setWithLastConsumed(
						$current,
						"xend",
						lv_xend_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLineCoordsAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getLineCoordsAccess().getColonKeyword_6());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getLineCoordsAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				lv_ybeg_8_0=RULE_INT
				{
					newLeafNode(lv_ybeg_8_0, grammarAccess.getLineCoordsAccess().getYbegINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineCoordsRule());
					}
					setWithLastConsumed(
						$current,
						"ybeg",
						lv_ybeg_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='to'
		{
			newLeafNode(otherlv_9, grammarAccess.getLineCoordsAccess().getToKeyword_9());
		}
		(
			(
				lv_yend_10_0=RULE_INT
				{
					newLeafNode(lv_yend_10_0, grammarAccess.getLineCoordsAccess().getYendINTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineCoordsRule());
					}
					setWithLastConsumed(
						$current,
						"yend",
						lv_yend_10_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getLineCoordsAccess().getRightParenthesisKeyword_11());
		}
	)
;

// Entry rule entryRuleCellStatus
entryRuleCellStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellStatusRule()); }
	iv_ruleCellStatus=ruleCellStatus
	{ $current=$iv_ruleCellStatus.current; }
	EOF;

// Rule CellStatus
ruleCellStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cell'
		{
			newLeafNode(otherlv_0, grammarAccess.getCellStatusAccess().getCellKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCellStatusAccess().getCoordinatesCoordinatesParserRuleCall_1_0());
				}
				lv_coordinates_1_0=ruleCoordinates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCellStatusRule());
					}
					set(
						$current,
						"coordinates",
						lv_coordinates_1_0,
						"gameoflife.GameoflifeDSL.Coordinates");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCoordinates
entryRuleCoordinates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoordinatesRule()); }
	iv_ruleCoordinates=ruleCoordinates
	{ $current=$iv_ruleCoordinates.current; }
	EOF;

// Rule Coordinates
ruleCoordinates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getCoordinatesAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_x_1_0=RULE_INT
				{
					newLeafNode(lv_x_1_0, grammarAccess.getCoordinatesAccess().getXINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoordinatesRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getCoordinatesAccess().getCommaKeyword_2());
		}
		(
			(
				lv_y_3_0=RULE_INT
				{
					newLeafNode(lv_y_3_0, grammarAccess.getCoordinatesAccess().getYINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoordinatesRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getCoordinatesAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEvolutionRules
entryRuleEvolutionRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvolutionRulesRule()); }
	iv_ruleEvolutionRules=ruleEvolutionRules
	{ $current=$iv_ruleEvolutionRules.current; }
	EOF;

// Rule EvolutionRules
ruleEvolutionRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvolutionRulesAccess().getEvolutionRulesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getLiveRulesLiveRulesParserRuleCall_1_0());
				}
				lv_liveRules_1_0=ruleLiveRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					add(
						$current,
						"liveRules",
						lv_liveRules_1_0,
						"gameoflife.GameoflifeDSL.LiveRules");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getDeadRulesDieRulesParserRuleCall_2_0());
				}
				lv_deadRules_2_0=ruleDieRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					add(
						$current,
						"deadRules",
						lv_deadRules_2_0,
						"gameoflife.GameoflifeDSL.DieRules");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionRulesAccess().getBecomeAliveRulesBecomeAliveRulesParserRuleCall_3_0());
				}
				lv_becomeAliveRules_3_0=ruleBecomeAliveRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionRulesRule());
					}
					add(
						$current,
						"becomeAliveRules",
						lv_becomeAliveRules_3_0,
						"gameoflife.GameoflifeDSL.BecomeAliveRules");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleLiveRules
entryRuleLiveRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiveRulesRule()); }
	iv_ruleLiveRules=ruleLiveRules
	{ $current=$iv_ruleLiveRules.current; }
	EOF;

// Rule LiveRules
ruleLiveRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StayAliveRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getLiveRulesAccess().getStayAliveRuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLiveRulesAccess().getSurroundingCheckSurroundingCheckParserRuleCall_1_0());
				}
				lv_surroundingCheck_1_0=ruleSurroundingCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiveRulesRule());
					}
					set(
						$current,
						"surroundingCheck",
						lv_surroundingCheck_1_0,
						"gameoflife.GameoflifeDSL.SurroundingCheck");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDieRules
entryRuleDieRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDieRulesRule()); }
	iv_ruleDieRules=ruleDieRules
	{ $current=$iv_ruleDieRules.current; }
	EOF;

// Rule DieRules
ruleDieRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DieRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getDieRulesAccess().getDieRuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDieRulesAccess().getSurroundingCheckSurroundingCheckParserRuleCall_1_0());
				}
				lv_surroundingCheck_1_0=ruleSurroundingCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDieRulesRule());
					}
					set(
						$current,
						"surroundingCheck",
						lv_surroundingCheck_1_0,
						"gameoflife.GameoflifeDSL.SurroundingCheck");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBecomeAliveRules
entryRuleBecomeAliveRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBecomeAliveRulesRule()); }
	iv_ruleBecomeAliveRules=ruleBecomeAliveRules
	{ $current=$iv_ruleBecomeAliveRules.current; }
	EOF;

// Rule BecomeAliveRules
ruleBecomeAliveRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BirthRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getBecomeAliveRulesAccess().getBirthRuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBecomeAliveRulesAccess().getSurroundingCheckSurroundingCheckParserRuleCall_1_0());
				}
				lv_surroundingCheck_1_0=ruleSurroundingCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBecomeAliveRulesRule());
					}
					set(
						$current,
						"surroundingCheck",
						lv_surroundingCheck_1_0,
						"gameoflife.GameoflifeDSL.SurroundingCheck");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSurroundingCheck
entryRuleSurroundingCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSurroundingCheckRule()); }
	iv_ruleSurroundingCheck=ruleSurroundingCheck
	{ $current=$iv_ruleSurroundingCheck.current; }
	EOF;

// Rule SurroundingCheck
ruleSurroundingCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSurroundingCheckAccess().getChecksCheckParserRuleCall_0_0());
				}
				lv_checks_0_0=ruleCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSurroundingCheckRule());
					}
					set(
						$current,
						"checks",
						lv_checks_0_0,
						"gameoflife.GameoflifeDSL.Check");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSurroundingCheckAccess().getExtracheckExtraCheckParserRuleCall_1_0());
				}
				lv_extracheck_1_0=ruleExtraCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSurroundingCheckRule());
					}
					add(
						$current,
						"extracheck",
						lv_extracheck_1_0,
						"gameoflife.GameoflifeDSL.ExtraCheck");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	iv_ruleCheck=ruleCheck
	{ $current=$iv_ruleCheck.current; }
	EOF;

// Rule Check
ruleCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='surrounding'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckAccess().getSurroundingKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckAccess().getCompareComparisonParserRuleCall_1_0());
				}
				lv_compare_1_0=ruleComparison
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckRule());
					}
					set(
						$current,
						"compare",
						lv_compare_1_0,
						"gameoflife.GameoflifeDSL.Comparison");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_integer_2_0=RULE_INT
				{
					newLeafNode(lv_integer_2_0, grammarAccess.getCheckAccess().getIntegerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleExtraCheck
entryRuleExtraCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtraCheckRule()); }
	iv_ruleExtraCheck=ruleExtraCheck
	{ $current=$iv_ruleExtraCheck.current; }
	EOF;

// Rule ExtraCheck
ruleExtraCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExtraCheckAccess().getOperatorOperatorsParserRuleCall_0_0());
				}
				lv_operator_0_0=ruleOperators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtraCheckRule());
					}
					set(
						$current,
						"operator",
						lv_operator_0_0,
						"gameoflife.GameoflifeDSL.Operators");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExtraCheckAccess().getCheckCheckParserRuleCall_1_0());
				}
				lv_check_1_0=ruleCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtraCheckRule());
					}
					set(
						$current,
						"check",
						lv_check_1_0,
						"gameoflife.GameoflifeDSL.Check");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current.getText(); }
	EOF;

// Rule Comparison
ruleComparison returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonAccess().getLessThanSignKeyword_0());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonAccess().getEqualsSignKeyword_1());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleOperators
entryRuleOperators returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperatorsRule()); }
	iv_ruleOperators=ruleOperators
	{ $current=$iv_ruleOperators.current.getText(); }
	EOF;

// Rule Operators
ruleOperators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorsAccess().getAndKeyword_0());
		}
		    |
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorsAccess().getOrKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
