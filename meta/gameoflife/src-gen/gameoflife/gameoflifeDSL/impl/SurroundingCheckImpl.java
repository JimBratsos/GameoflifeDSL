/**
 * generated by Xtext 2.25.0
 */
package gameoflife.gameoflifeDSL.impl;

import gameoflife.gameoflifeDSL.Check;
import gameoflife.gameoflifeDSL.ExtraCheck;
import gameoflife.gameoflifeDSL.GameoflifeDSLPackage;
import gameoflife.gameoflifeDSL.SurroundingCheck;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Surrounding Check</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.SurroundingCheckImpl#getChecks <em>Checks</em>}</li>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.SurroundingCheckImpl#getExtracheck <em>Extracheck</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SurroundingCheckImpl extends MinimalEObjectImpl.Container implements SurroundingCheck
{
  /**
   * The cached value of the '{@link #getChecks() <em>Checks</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChecks()
   * @generated
   * @ordered
   */
  protected Check checks;

  /**
   * The cached value of the '{@link #getExtracheck() <em>Extracheck</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtracheck()
   * @generated
   * @ordered
   */
  protected EList<ExtraCheck> extracheck;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SurroundingCheckImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameoflifeDSLPackage.Literals.SURROUNDING_CHECK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Check getChecks()
  {
    return checks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChecks(Check newChecks, NotificationChain msgs)
  {
    Check oldChecks = checks;
    checks = newChecks;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS, oldChecks, newChecks);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChecks(Check newChecks)
  {
    if (newChecks != checks)
    {
      NotificationChain msgs = null;
      if (checks != null)
        msgs = ((InternalEObject)checks).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS, null, msgs);
      if (newChecks != null)
        msgs = ((InternalEObject)newChecks).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS, null, msgs);
      msgs = basicSetChecks(newChecks, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS, newChecks, newChecks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExtraCheck> getExtracheck()
  {
    if (extracheck == null)
    {
      extracheck = new EObjectContainmentEList<ExtraCheck>(ExtraCheck.class, this, GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK);
    }
    return extracheck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS:
        return basicSetChecks(null, msgs);
      case GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK:
        return ((InternalEList<?>)getExtracheck()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS:
        return getChecks();
      case GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK:
        return getExtracheck();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS:
        setChecks((Check)newValue);
        return;
      case GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK:
        getExtracheck().clear();
        getExtracheck().addAll((Collection<? extends ExtraCheck>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS:
        setChecks((Check)null);
        return;
      case GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK:
        getExtracheck().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.SURROUNDING_CHECK__CHECKS:
        return checks != null;
      case GameoflifeDSLPackage.SURROUNDING_CHECK__EXTRACHECK:
        return extracheck != null && !extracheck.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //SurroundingCheckImpl
