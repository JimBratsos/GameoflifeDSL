/**
 * generated by Xtext 2.25.0
 */
package gameoflife.gameoflifeDSL.impl;

import gameoflife.gameoflifeDSL.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GameoflifeDSLFactoryImpl extends EFactoryImpl implements GameoflifeDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static GameoflifeDSLFactory init()
  {
    try
    {
      GameoflifeDSLFactory theGameoflifeDSLFactory = (GameoflifeDSLFactory)EPackage.Registry.INSTANCE.getEFactory(GameoflifeDSLPackage.eNS_URI);
      if (theGameoflifeDSLFactory != null)
      {
        return theGameoflifeDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new GameoflifeDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameoflifeDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case GameoflifeDSLPackage.GAME_START: return createGameStart();
      case GameoflifeDSLPackage.INITIAL_GRID: return createInitialGrid();
      case GameoflifeDSLPackage.LINE_STATUS: return createLineStatus();
      case GameoflifeDSLPackage.LINE_COORDS: return createLineCoords();
      case GameoflifeDSLPackage.CELL_STATUS: return createCellStatus();
      case GameoflifeDSLPackage.COORDINATES: return createCoordinates();
      case GameoflifeDSLPackage.EVOLUTION_RULES: return createEvolutionRules();
      case GameoflifeDSLPackage.LIVE_RULES: return createLiveRules();
      case GameoflifeDSLPackage.DIE_RULES: return createDieRules();
      case GameoflifeDSLPackage.BECOME_ALIVE_RULES: return createBecomeAliveRules();
      case GameoflifeDSLPackage.SURROUNDING_CHECK: return createSurroundingCheck();
      case GameoflifeDSLPackage.CHECK: return createCheck();
      case GameoflifeDSLPackage.EXTRA_CHECK: return createExtraCheck();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GameStart createGameStart()
  {
    GameStartImpl gameStart = new GameStartImpl();
    return gameStart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitialGrid createInitialGrid()
  {
    InitialGridImpl initialGrid = new InitialGridImpl();
    return initialGrid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LineStatus createLineStatus()
  {
    LineStatusImpl lineStatus = new LineStatusImpl();
    return lineStatus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LineCoords createLineCoords()
  {
    LineCoordsImpl lineCoords = new LineCoordsImpl();
    return lineCoords;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CellStatus createCellStatus()
  {
    CellStatusImpl cellStatus = new CellStatusImpl();
    return cellStatus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Coordinates createCoordinates()
  {
    CoordinatesImpl coordinates = new CoordinatesImpl();
    return coordinates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EvolutionRules createEvolutionRules()
  {
    EvolutionRulesImpl evolutionRules = new EvolutionRulesImpl();
    return evolutionRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LiveRules createLiveRules()
  {
    LiveRulesImpl liveRules = new LiveRulesImpl();
    return liveRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DieRules createDieRules()
  {
    DieRulesImpl dieRules = new DieRulesImpl();
    return dieRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BecomeAliveRules createBecomeAliveRules()
  {
    BecomeAliveRulesImpl becomeAliveRules = new BecomeAliveRulesImpl();
    return becomeAliveRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SurroundingCheck createSurroundingCheck()
  {
    SurroundingCheckImpl surroundingCheck = new SurroundingCheckImpl();
    return surroundingCheck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Check createCheck()
  {
    CheckImpl check = new CheckImpl();
    return check;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExtraCheck createExtraCheck()
  {
    ExtraCheckImpl extraCheck = new ExtraCheckImpl();
    return extraCheck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GameoflifeDSLPackage getGameoflifeDSLPackage()
  {
    return (GameoflifeDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static GameoflifeDSLPackage getPackage()
  {
    return GameoflifeDSLPackage.eINSTANCE;
  }

} //GameoflifeDSLFactoryImpl
