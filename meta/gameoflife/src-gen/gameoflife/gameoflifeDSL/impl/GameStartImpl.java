/**
 * generated by Xtext 2.25.0
 */
package gameoflife.gameoflifeDSL.impl;

import gameoflife.gameoflifeDSL.EvolutionRules;
import gameoflife.gameoflifeDSL.GameStart;
import gameoflife.gameoflifeDSL.GameoflifeDSLPackage;
import gameoflife.gameoflifeDSL.InitialGrid;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Start</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.GameStartImpl#getInitialGrid <em>Initial Grid</em>}</li>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.GameStartImpl#getEvolutionRules <em>Evolution Rules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameStartImpl extends MinimalEObjectImpl.Container implements GameStart
{
  /**
   * The cached value of the '{@link #getInitialGrid() <em>Initial Grid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialGrid()
   * @generated
   * @ordered
   */
  protected InitialGrid initialGrid;

  /**
   * The cached value of the '{@link #getEvolutionRules() <em>Evolution Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvolutionRules()
   * @generated
   * @ordered
   */
  protected EList<EvolutionRules> evolutionRules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameStartImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameoflifeDSLPackage.Literals.GAME_START;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitialGrid getInitialGrid()
  {
    return initialGrid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitialGrid(InitialGrid newInitialGrid, NotificationChain msgs)
  {
    InitialGrid oldInitialGrid = initialGrid;
    initialGrid = newInitialGrid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GameoflifeDSLPackage.GAME_START__INITIAL_GRID, oldInitialGrid, newInitialGrid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitialGrid(InitialGrid newInitialGrid)
  {
    if (newInitialGrid != initialGrid)
    {
      NotificationChain msgs = null;
      if (initialGrid != null)
        msgs = ((InternalEObject)initialGrid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GameoflifeDSLPackage.GAME_START__INITIAL_GRID, null, msgs);
      if (newInitialGrid != null)
        msgs = ((InternalEObject)newInitialGrid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GameoflifeDSLPackage.GAME_START__INITIAL_GRID, null, msgs);
      msgs = basicSetInitialGrid(newInitialGrid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameoflifeDSLPackage.GAME_START__INITIAL_GRID, newInitialGrid, newInitialGrid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EvolutionRules> getEvolutionRules()
  {
    if (evolutionRules == null)
    {
      evolutionRules = new EObjectContainmentEList<EvolutionRules>(EvolutionRules.class, this, GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES);
    }
    return evolutionRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.GAME_START__INITIAL_GRID:
        return basicSetInitialGrid(null, msgs);
      case GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES:
        return ((InternalEList<?>)getEvolutionRules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.GAME_START__INITIAL_GRID:
        return getInitialGrid();
      case GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES:
        return getEvolutionRules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.GAME_START__INITIAL_GRID:
        setInitialGrid((InitialGrid)newValue);
        return;
      case GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES:
        getEvolutionRules().clear();
        getEvolutionRules().addAll((Collection<? extends EvolutionRules>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.GAME_START__INITIAL_GRID:
        setInitialGrid((InitialGrid)null);
        return;
      case GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES:
        getEvolutionRules().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.GAME_START__INITIAL_GRID:
        return initialGrid != null;
      case GameoflifeDSLPackage.GAME_START__EVOLUTION_RULES:
        return evolutionRules != null && !evolutionRules.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //GameStartImpl
