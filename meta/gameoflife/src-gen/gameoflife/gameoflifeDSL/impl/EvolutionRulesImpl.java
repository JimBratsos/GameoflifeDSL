/**
 * generated by Xtext 2.25.0
 */
package gameoflife.gameoflifeDSL.impl;

import gameoflife.gameoflifeDSL.BecomeAliveRules;
import gameoflife.gameoflifeDSL.DieRules;
import gameoflife.gameoflifeDSL.EvolutionRules;
import gameoflife.gameoflifeDSL.GameoflifeDSLPackage;
import gameoflife.gameoflifeDSL.LiveRules;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Evolution Rules</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.EvolutionRulesImpl#getLiveRules <em>Live Rules</em>}</li>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.EvolutionRulesImpl#getDeadRules <em>Dead Rules</em>}</li>
 *   <li>{@link gameoflife.gameoflifeDSL.impl.EvolutionRulesImpl#getBecomeAliveRules <em>Become Alive Rules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EvolutionRulesImpl extends MinimalEObjectImpl.Container implements EvolutionRules
{
  /**
   * The cached value of the '{@link #getLiveRules() <em>Live Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiveRules()
   * @generated
   * @ordered
   */
  protected EList<LiveRules> liveRules;

  /**
   * The cached value of the '{@link #getDeadRules() <em>Dead Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeadRules()
   * @generated
   * @ordered
   */
  protected EList<DieRules> deadRules;

  /**
   * The cached value of the '{@link #getBecomeAliveRules() <em>Become Alive Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBecomeAliveRules()
   * @generated
   * @ordered
   */
  protected EList<BecomeAliveRules> becomeAliveRules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EvolutionRulesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameoflifeDSLPackage.Literals.EVOLUTION_RULES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LiveRules> getLiveRules()
  {
    if (liveRules == null)
    {
      liveRules = new EObjectContainmentEList<LiveRules>(LiveRules.class, this, GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES);
    }
    return liveRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DieRules> getDeadRules()
  {
    if (deadRules == null)
    {
      deadRules = new EObjectContainmentEList<DieRules>(DieRules.class, this, GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES);
    }
    return deadRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BecomeAliveRules> getBecomeAliveRules()
  {
    if (becomeAliveRules == null)
    {
      becomeAliveRules = new EObjectContainmentEList<BecomeAliveRules>(BecomeAliveRules.class, this, GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES);
    }
    return becomeAliveRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES:
        return ((InternalEList<?>)getLiveRules()).basicRemove(otherEnd, msgs);
      case GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES:
        return ((InternalEList<?>)getDeadRules()).basicRemove(otherEnd, msgs);
      case GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES:
        return ((InternalEList<?>)getBecomeAliveRules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES:
        return getLiveRules();
      case GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES:
        return getDeadRules();
      case GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES:
        return getBecomeAliveRules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES:
        getLiveRules().clear();
        getLiveRules().addAll((Collection<? extends LiveRules>)newValue);
        return;
      case GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES:
        getDeadRules().clear();
        getDeadRules().addAll((Collection<? extends DieRules>)newValue);
        return;
      case GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES:
        getBecomeAliveRules().clear();
        getBecomeAliveRules().addAll((Collection<? extends BecomeAliveRules>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES:
        getLiveRules().clear();
        return;
      case GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES:
        getDeadRules().clear();
        return;
      case GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES:
        getBecomeAliveRules().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameoflifeDSLPackage.EVOLUTION_RULES__LIVE_RULES:
        return liveRules != null && !liveRules.isEmpty();
      case GameoflifeDSLPackage.EVOLUTION_RULES__DEAD_RULES:
        return deadRules != null && !deadRules.isEmpty();
      case GameoflifeDSLPackage.EVOLUTION_RULES__BECOME_ALIVE_RULES:
        return becomeAliveRules != null && !becomeAliveRules.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //EvolutionRulesImpl
